# Project Green (NetDog) rudimentary documentation
# Copyright 2018, Aswin Babu Karuvallly


What is this program?
---------------------
The netdog project started with the aim of designing a program which can easily
bring computers up and down remotely. The idea came from the realization that,
quite a few computers were left powered up when the college lab closes for the
day. Thus the initial name "Project Green".

A number of features were added to the feature list, most importantly tracking
computers even if their IP addresses changed, the ability to execute commands
or scripts on a specified range of machines with a single command, and the
ability to copy files to a range of machines without requiring protocols such
as SFTP or FTP.

The abilities does not end there and netdog provides many notable features such
as early warning of HDD failure on the machines on the network. The exhaustive
list of features is listed in later section. Once completed, netdog will be
a completely extensible system to which features an be easily added through
plugins.


Basic architecture
------------------
NetDog has a client server architecture. The server is responsible for issuing
commands to the clients and is to be used by the administrator of the network.
The client application is to be run on machines on the network to be
administered.

After installing NetDog server or client on a machine, a unique public-private
key pair for the machine is generated which is then used for uniquely
identifying the machine and securing data transmission between the client and
server.

Once the server program is up and running, it listens on the port 1337 for
connections from clients. Once the client program is up, it starts listening on
port 1994. These ports serve dual purpose of facilitating communication and
allowing the identification of server and clients from the rest of the machines
on the network. Both NetDog server and client are daemons. They are system 
services which remain in memory and automatically starts during system boot.

When a client starts for the first time, it looks for active servers on the
network. When it finds one, it starts the pairing procedure. During the pairing
process, the client sends its hostname and public-key. The server in turn
provides the client with it's public key. These keys are then used for
identification and encrypted communication between machines.

The client and server uses public key encryption to identify and secure the
communication between them. The network admininstrator can issue commands from
the server machine which will then be sent to all the clients on the network.
A client can also contact the server occasionally, for example if the client
detects undseriable network traffic or if the system is overheating.

NetDog is capable of shutting down all the clients on the network at once by
remotely executing the shutdown command. It is also able to power up systems
which support remote Wake-On-LAN feature, by sending magic packets.


Client <--> Server communication
--------------------------------
The NetDog server and clients communicate through TCP connections. Except
during pairing, the connections are secured using public key encryption. 
Each message sent between client and server can be broken down into two parts,
The ID and the data part. The data part is further broken into command and
payload.

The ID part contains the identifier of the machine from which the message has
originated. This is usually the hostname of the machine. The command part
contains the command which indicates the action to be performed. It does not
imply a UNIX command, but one of the commands supported by the NetDog protocol,
such as "PAIR".

The ID is sent as plaintext, while the data part is encrypted first using the
private key of the sender and then using the public key of the receiver.


Feature list
------------
* Bring all computers on the network up and down remotely
* Scheduled power up and down of computers
* Execute commands/scripts remotely on machines
* Copy files to remote machines without third party protocols
* Track and identify clients through IP changes
* Secure client-server communication using public key encryption
* List all machines on the network which are not clients (detect intruders)
* Alert if daemon on a client is not running
* Centralized logging of all data regarding clients
* Track power-on power-off times and user login history
* command line and web interface
* Log network traffic of clients
* Flag undesirable/excessive network activity
* Warn if machines have failing HDDs
* Warn if machines are overheating
* Flag users running undesirable processes
* Control access to network addresses and services
* Bring machines up and run ansible playbooks
* Throttle bandwidth on machines on the network
* Except specific machines from being applied rules/commands
* Plugin interface for extending features


Track and identify clients through IP changes
---------------------------------------------
Ability to track clients even if their IP address changes. The clients are
identified not using their IPs, but using digital signatures. Upon installing
the application, the client and server generates public-private key pair which
is then used to identify the legitimate server and clients but also for
securely transmitting data between the server and clients. The application has
an inbuilt network scanner which can identify the server and clients on a
a network, thus 